name: Find a PR Comment
description: find a comment to a pull request

inputs:
  token:
    description: "GitHub Token"
    required: true
  pr_number:
    description: "Pull Request number"
    required: true
  author:
    description: "Author of the comment"
    required: false
    default: "Github-Actions[bot]"
  meta_comment:
    description: "Meta comment"
    required: false
    default: "<!-- AUTOMATED PR COMMENT -->"
  partial_delimeter:
    description: "Part of the comment looking for"
    required: false
    default: ""
    
runs:
  using: "composite"
  steps:
    - name: Find PR Comment by PR ID
      id: find
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ inputs.pr_number }}
        author: ${{ inputs.author }}
        token: ${{ inputs.token }}
        body-includes: ${{ inputs.meta_comment }}

    - name: Print PR Comment
      shell: bash
      run: |
        echo "partial_delimeter=${{ inputs.partial_delimeter}}"
        echo "body=${{ steps.find.outputs.body }}"

    - name: Extract Partial Comment
      id: extract
      shell: bash
      run: |
        body="${{ steps.find.outputs.comment-body }}"
        partial_delimeter="${{ inputs.partial_delimeter }}"
        
        if [[ -z "$partial_delimeter" ]]; then
          echo "partial delimited is not provided"
          partial_body=""
        else
          echo "partial delimited is: $partial_delimeter"
          partial_body=$(sed -n "/$partial_delimeter/,/$partial_delimeter/p" <<< "$body")
          partial_body=$(sed '1d;$d' <<< "$partial_body")
        fi
        echo "body=$body"
        echo "partial_body=$partial_body"

        echo "partial_body=$partial_body" >> $GITHUB_OUTPUT
outputs:
  comment_id: 
    description: "Comment ID"
    value: ${{ steps.find.outputs.comment-id }}
  body:
    description: "Comment Body"
    value: ${{ steps.find.outputs.comment-body }}
  partial_body:
    description: "Comment"
    value: ${{ steps.extract.outputs.partial_body }}
  author:
    description: "Author"
    value: ${{ steps.find.outputs.author }}
  created_at:
    description: "Created At"
    value: ${{ steps.find.outputs.comment-created-at }}
  

    